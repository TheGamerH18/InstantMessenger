@model IEnumerable<InstantMessenger.Models.Chat>
@using Microsoft.AspNetCore.Identity
@using InstantMessenger.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Index";
    Layout = "_Chat";
}
<div class="chatsOverall">
    <div id="userSelf">
        @if (SignInManager.IsSignedIn(User))
        {
            @if (UserManager.GetUserAsync(User).Result.ProfilePicture != null)
            { <img class="userImg" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfilePicture))"> }
            else
            { <img style="width:40px;height:40px; border-radius:30px" src="~/img/fallbackImg.jpg"> }
            <h1 id="userNameSelf">@User.Identity.Name</h1>
        }
        else
        {
            <h1>Error</h1>
        }
    </div>
    <div class="autocomplete">
        <input id="username" type="text" placeholder="Suche" name="username" autocomplete="off">
    </div>
    <div class="chats">
    </div>
</div>
<div class="openChatOverall">
    <div class="openChat">
    </div>
    <div class="input">
        <textarea placeholder="Nachricht schreiben!" name="textMessage" id="inputMessage"></textarea>
    </div>
</div>